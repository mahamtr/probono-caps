name: Feature Branch PR Review

on:
  push:
    branches:
      - "feature/**"

jobs:
  pr-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for PR
        id: check-pr
        uses: actions/github-script@v7
        with:
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open',
              base: 'main'
            });

            if (prs.data.length === 0) {
              console.log('No open PR found targeting main branch');
              return;
            }

            const pr = prs.data[0];
            if (pr.base.ref !== 'main') {
              console.log('PR exists but does not target main branch');
              return;
            }

            core.setOutput('pr_number', pr.number);
            core.setOutput('pr_found', 'true');
            console.log(`Found PR #${pr.number} targeting main branch`);

      - name: Get PR Changes
        if: steps.check-pr.outputs.pr_found == 'true'
        id: get-changes
        run: |
          PR_NUMBER=${{ steps.check-pr.outputs.pr_number }}
          git fetch origin main
          DIFF_FILES=$(git diff --name-only origin/main)
          echo "DIFF_FILES<<EOF" >> $GITHUB_ENV
          echo "$DIFF_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          DIFF_CONTENT=$(git diff origin/main)
          echo "DIFF_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$DIFF_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Setup Node.js
        if: steps.check-pr.outputs.pr_found == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        if: steps.check-pr.outputs.pr_found == 'true'
        run: npm install axios

      - name: Review Changes with OpenAI
        if: steps.check-pr.outputs.pr_found == 'true'
        uses: actions/github-script@v7
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          script: |
            const axios = require('axios');

            const prompt = `Please review the following code changes and provide feedback based on:
            1. SOLID principles
            2. Clean Code practices
            3. Security concerns
            4. Performance implications
            5. Potential bugs or edge cases
            6. Testing considerations
            7. Documentation needs

            Changes to review:
            ${process.env.DIFF_FILES}

            Diff content:
            ${process.env.DIFF_CONTENT}

            Please provide specific, actionable feedback for each concern found.`;

            try {
              const response = await axios.post('https://api.openai.com/v1/chat/completions', {
                model: "gpt-4",
                messages: [{
                  role: "user",
                  content: prompt
                }],
                temperature: 0.7,
                max_tokens: 2000
              }, {
                headers: {
                  'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
                  'Content-Type': 'application/json'
                }
              });
              
              const review = response.data.choices[0].message.content;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: parseInt(process.env.PR_NUMBER),
                body: `## Automated Code Review

                ${review}
                
                ---
                This review was automatically generated using OpenAI GPT-4.`
              });
            } catch (error) {
              console.error('Error during OpenAI review:', error);
              core.setFailed('Failed to complete code review');
            }

      - name: Send review notification
        if: steps.check-pr.outputs.pr_found == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üîç Code Review Completed for Feature Branch PR"
          to: ${{ env.NOTIFICATION_EMAILS }}
          from: GitHub Actions
          body: |
            A code review has been completed for the Pull Request on branch ${{ github.ref_name }}.

            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            PR Number: ${{ steps.check-pr.outputs.pr_number }}

            Please check the PR comments for the detailed review: ${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.check-pr.outputs.pr_number }}
